version: 2.1
_run_anchors:
  ignore_intermediate_branches_and_master:
    &ignore_intermediate_branches_and_master
    filters:
      branches:
        ignore:
          - test
          - something
  run-new-relic-agent: &run-new-relic-agent
    name: Run New Relic agent
    command: |
      echo "custom_attributes:"
  launch-build-event-collector: &launch-build-event-collector
    name: Launch build event collector
    command: |
       echo "hello world"
    background: true      

orbs:
  node: circleci/node@1.1.6

jobs:
  build-staging:
    executor:
      name: node/default
    steps:
      - checkout
      - run: echo 'export MY_ENV_VAR="FOO"' >> $BASH_ENV
      - run:
          name: Committing Build to Staging
          command: |
            echo "staging"

  install-and-test:
    executor:
      name: node/default
    steps:
      - checkout
      
  build_regression_db_non_oracle:
    parameters:
      cache_test_results:
        type: enum
        default: "no"
        enum: [ "no", "yes" ]
    machine:
      image: ubuntu-1604:202101-01
    working_directory: ~/root
    steps:
      - run: *run-new-relic-agent   
      - run: *launch-build-event-collector
      
  build_regression_db_non_oracle_java_11:
    machine: true
    steps:
      - run:
#           <<: *env
          name: "Deploy Over SSH (Live)"
          command: |
            echo "hello worrld!"            
  deploy-staging:
    machine: true
    steps:
      - run:
#           <<: *env
          name: "Deploy Over SSH (Staging)"
          command: |
            echo "hello worlds"
  build:
    docker:
      - image: circleci/golang:1.9.6
    steps:
      - run: echo "hello world 1"

workflows:
#   deploy-live:
#     jobs:
#       - deploy-live:
#           filters:
#             branches:
#               only:
#                 - master
#test

  deploy-staging:
    jobs:
      - install-and-test
      - deploy-staging:
          requires:
            - install-and-test
      - build-staging:
          requires:
            - install-and-test 
      - build_regression_db_non_oracle
      - build_regression_db_non_oracle_java_11
      
  deploy-live:
    jobs:
      - install-and-test
      - deploy-staging:
          requires:
            - install-and-test
      - build-staging:
          requires:
            - install-and-test 
      - build_regression_db_non_oracle:
          cache_test_results: "yes"
          <<: *ignore_intermediate_branches_and_master          
      - build_regression_db_non_oracle_java_11
      
      
      
  e2e-tests-workflow:
    triggers:
      - schedule:
          cron: "0,5,10,15,20,25,30,35,40,45,50,55 * * * *" # every 5 minutes
          filters:
            branches:
              only:
                - master          
    jobs:
      - build_regression_db_non_oracle
      - build_regression_db_non_oracle_java_11




